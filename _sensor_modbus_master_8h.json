{
  "version": "1.14.0",
  "compound": {
    "kind": "file",
    "id": "_sensor_modbus_master_8h",
    "name": "SensorModbusMaster.h",
    "url_base": "_sensor_modbus_master_8h",
    "url": "_sensor_modbus_master_8h.html",
    "include": null,
    "has_template_details": false,
    "templates": null,
    "brief": "Contains the <a href=\"classmodbus_master.html\" class=\"m-doc\">modbusMaster</a> class declarations.",
    "description": "<aside class=\"m-note m-default\"><h4>Copyright</h4><p>Stroud Water Research Center Part of the EnviroDIY SensorModbusMaster library for Arduino.</p></aside><aside class=\"m-note m-default\"><h4>License</h4><p>This library is published under the BSD-3 license.</p></aside><aside class=\"m-note m-default\"><h4>Author</h4><p>Sara Geleskie Damiano <a href=\"mailto:sdamiano@stroudcenter.org\">sdamiano@stroudcenter.org</a></p></aside>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [
      {
        "kind": "union",
        "url": "unionle_frame.html",
        "name": "leFrame",
        "brief": "A frame for holding parts of a response. Define a little-endian frame as a union - that is a special class type that can hold only one of its non-static data members at a time.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "classmodbus_master.html",
        "name": "modbusMaster",
        "brief": "The class for communicating with modbus devices.",
        "deprecated": null,
        "since": null,
        "templates": null
      }
    ],
    "base_classes": [],
    "derived_classes": [],
    "enums": [
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a8ba83d09160bd55999b0630dccc467ae",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "endianness",
        "brief": "The &quot;endianness&quot; of returned values.",
        "description": "",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_strong": false,
        "values": [
          {
            "id": "a8ba83d09160bd55999b0630dccc467aead13338b1c7186aed834aa25dbb65b321",
            "name": "littleEndian",
            "initializer": "= 0",
            "brief": "little endian",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a8ba83d09160bd55999b0630dccc467aeafb28f96cadcbba103b51c2a667ad723b",
            "name": "bigEndian",
            "initializer": "",
            "brief": "big endian",
            "description": "",
            "deprecated": null,
            "since": null
          }
        ],
        "has_value_details": true
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a9b9360aa533153d15b6355695898bef1",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "pointerType",
        "brief": "The types of &quot;pointers&quot; to other modbus addresses.",
        "description": "<p>Sometimes values in registers are set as the address of a pointer to look at for the real value rather than being set as the values themselves. This pointer type tells you in what section of the memory map to look for the value being pointed to.</p>",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_strong": false,
        "values": [
          {
            "id": "a9b9360aa533153d15b6355695898bef1a333e9ee1d906125d6eefddc01f4576db",
            "name": "holdingRegister",
            "initializer": "= 0",
            "brief": "pointer to a holding register",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a9b9360aa533153d15b6355695898bef1a5004a4f94d3d85dc6d6f03adaf24c41b",
            "name": "inputRegister",
            "initializer": "",
            "brief": "pointer to an input register",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a9b9360aa533153d15b6355695898bef1ad0841ac9569d19e8423f438059e81bb4",
            "name": "inputContacts",
            "initializer": "",
            "brief": "pointer to a input contact",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a9b9360aa533153d15b6355695898bef1ab333cf93e88389149e1e8fb6c804d898",
            "name": "outputCoil",
            "initializer": "",
            "brief": "pointer to a output coil",
            "description": "",
            "deprecated": null,
            "since": null
          }
        ],
        "has_value_details": true
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a32bdb92774b67a64a50bbf538fa10f05",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "modbusErrorCode",
        "brief": "The types of errors that can occur during Modbus communication.",
        "description": "",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_strong": false,
        "values": [
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05abf350750d0d4fabd8954c0f1e9bbae94",
            "name": "NO_ERROR",
            "initializer": "= 0x00",
            "brief": "All good.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05a97d280e34225670d055a0a3c0e179fe1",
            "name": "ILLEGAL_FUNCTION",
            "initializer": "= 0x01",
            "brief": "The function code received in the query is not an allowable action for the slave.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05abe39a62c5d9bddc2f4310e5433af2f14",
            "name": "ILLEGAL_DATA_ADDRESS",
            "initializer": "= 0x02",
            "brief": "The data address received in the query is not an allowable address for the slave.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05a5bc3a4f16c36a52ba047bd34ea1f6762",
            "name": "ILLEGAL_DATA_VALUE",
            "initializer": "= 0x03",
            "brief": "A value contained in the query data field is not an allowable value for the slave.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05a389a0ee39db785f331185aca8af7ae14",
            "name": "SLAVE_DEVICE_FAILURE",
            "initializer": "= 0x04",
            "brief": "An unrecoverable error occurred while the slave was attempting to perform the requested action.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05aae5e107da1615087380dd2c17f45ac37",
            "name": "ACKNOWLEDGE",
            "initializer": "= 0x05",
            "brief": "The server has accepted the request and is processing it, but a long duration of time is required to do so.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05a87e9484b297cb34a48d9ede4c01e41b0",
            "name": "SLAVE_DEVICE_BUSY",
            "initializer": "= 0x06",
            "brief": "The server is engaged in processing a long-duration program command. The client should retransmit the message later when the server is free.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05a4da7666fd4c0b042e6957c1b22b337cc",
            "name": "NEGATIVE_ACKNOWLEDGE",
            "initializer": "= 0x07",
            "brief": "The server cannot perform the program function received in the query.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05a3312cf797559c9389b3bf8bd0e724a99",
            "name": "MEMORY_PARITY",
            "initializer": "= 0x08",
            "brief": "The server attempted to read extended memory, but detected a parity error in the memory.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05a8e97ff897b1e116e1b552809e2bc3189",
            "name": "GATEWAY_PATH_UNAVAILABLE",
            "initializer": "= 0x0A",
            "brief": "The gateway is not available.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05ac894bede22d0868642f9aba3fac0ac1b",
            "name": "GATEWAY_TARGET_DEVICE_FAILED_TO_RESPOND",
            "initializer": "=\n        0x0B",
            "brief": "The gateway target device failed to respond.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05af25c4a77a7696176acf9bfc510f7a384",
            "name": "WRONG_SLAVE_ID",
            "initializer": "= 0xD",
            "brief": "The response is not from the correct modbus slave.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05acaf9087aa957d5994822a4815d2aed01",
            "name": "BAD_CRC",
            "initializer": "= 0xE",
            "brief": "The CRC check on the response failed.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a32bdb92774b67a64a50bbf538fa10f05ad63f235f0834a895fd6fd9a1bcc8ee55",
            "name": "NO_RESPONSE",
            "initializer": "= 0xF",
            "brief": "No response was received at all.",
            "description": "",
            "deprecated": null,
            "since": null
          }
        ],
        "has_value_details": true
      }
    ],
    "typedefs": [
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "af8fb63466671ed6526c0cf8797962785",
        "include": null,
        "has_details": false,
        "is_using": false,
        "type": "enum <a href=\"#a8ba83d09160bd55999b0630dccc467ae\" class=\"m-doc\">endianness</a>",
        "args": "",
        "name": "endianness",
        "brief": "The &quot;endianness&quot; of returned values.",
        "description": "",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "afaa9b2da868a225ea0bd601361d9b4a6",
        "include": null,
        "has_details": true,
        "is_using": false,
        "type": "enum <a href=\"#a9b9360aa533153d15b6355695898bef1\" class=\"m-doc\">pointerType</a>",
        "args": "",
        "name": "pointerType",
        "brief": "The types of &quot;pointers&quot; to other modbus addresses.",
        "description": "<p>Sometimes values in registers are set as the address of a pointer to look at for the real value rather than being set as the values themselves. This pointer type tells you in what section of the memory map to look for the value being pointed to.</p>",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "ad2a582c9d6e7a88ea5af778ad7032fbc",
        "include": null,
        "has_details": false,
        "is_using": false,
        "type": "enum <a href=\"#a32bdb92774b67a64a50bbf538fa10f05\" class=\"m-doc\">modbusErrorCode</a>",
        "args": "",
        "name": "modbusErrorCode",
        "brief": "The types of errors that can occur during Modbus communication.",
        "description": "",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "abede485d42773c73a36db82ef12cb553",
        "include": null,
        "has_details": true,
        "is_using": false,
        "type": "union leFrame",
        "args": "",
        "name": "leFrame",
        "brief": "A frame for holding parts of a response. Define a little-endian frame as a union - that is a special class type that can hold only one of its non-static data members at a time.",
        "description": "<p>With avr-gcc (Arduino&#x27;s compiler), integer and floating point variables are all physically stored in memory in little-endian byte order, so this union is all that is needed to translate modbus byte data into the other data forms.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>: The byte order of big-endian data must be reversed when it is put in this frame format.</p></aside>",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "has_template_details": false,
        "templates": null
      }
    ],
    "funcs": [],
    "vars": [],
    "defines": [
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a3d9d93e9a53461ba2177521472b761c4",
        "include": null,
        "has_details": true,
        "name": "RESPONSE_BUFFER_SIZE",
        "initializer": "256",
        "brief": "The size of the response buffer for the modbus devices.",
        "description": "<p>Per the Specification and Implementation Guide for MODBUS over serial line, the maximum response size is 256 bytes - which is the size we use.</p><p>If you know you will never make any modbus requests for a modbus response this long, decrease this number to save memory space.</p>",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "acf5b4949b2bcaa055cc03fa33274f6d9",
        "include": null,
        "has_details": true,
        "name": "COMMAND_BUFFER_SIZE",
        "initializer": "256",
        "brief": "The size of the command buffer for the modbus devices.",
        "description": "<p>Per the Specification and Implementation Guide for MODBUS over serial line, the maximum command size is 256 bytes - which is the size we use.</p><p>If you know in advance the size of the largest command you will send, you can decrease this number to save memory space.</p>",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a66f7c59a25c8cca6d5b0991895c26b69",
        "include": null,
        "has_details": false,
        "name": "MODBUS_TIMEOUT",
        "initializer": "500",
        "brief": "The default time to wait for response after a command (in ms)",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a4f4faaf6fc6fdad8c267e79a0472e929",
        "include": null,
        "has_details": true,
        "name": "MODBUS_FRAME_TIMEOUT",
        "initializer": "4",
        "brief": "The default time to wait between characters within a frame (in ms)",
        "description": "<p>The modbus protocol defines that there can be no more than 1.5 characters of silence between characters in a frame and any space over 3.5 characters defines a new frame.</p>",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a86fd4404b140711fdb77326609c0f393",
        "include": null,
        "has_details": false,
        "name": "BYTE_SIZE",
        "initializer": "1",
        "brief": "The size of a single byte in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a5581151d29ca9367f186a455e7918b24",
        "include": null,
        "has_details": false,
        "name": "UINT16_SIZE",
        "initializer": "2",
        "brief": "The size of a uint16_t in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a7dd6df41d89aa2e4887365611885c1f0",
        "include": null,
        "has_details": false,
        "name": "INT16_SIZE",
        "initializer": "2",
        "brief": "The size of an int16_t in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a587f427d930ffcd6e8117b992bdfc3dd",
        "include": null,
        "has_details": false,
        "name": "UINT32_SIZE",
        "initializer": "4",
        "brief": "The size of a uint32_t in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a6cb108c9a0b7aab4dd121fbf87c8d554",
        "include": null,
        "has_details": false,
        "name": "INT32_SIZE",
        "initializer": "4",
        "brief": "The size of an int32_t in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a18904678eccc87fab4cf262738d9d79e",
        "include": null,
        "has_details": false,
        "name": "FLOAT32_SIZE",
        "initializer": "4",
        "brief": "The size of a float32 in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "aefb8eddc7bc07a77de62fb120e296b4b",
        "include": null,
        "has_details": false,
        "name": "TAI64_SIZE",
        "initializer": "8",
        "brief": "The size of a 64-bit timestamp in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "adfe6a89eeb3b106a0d062ecbbcd4f2d0",
        "include": null,
        "has_details": false,
        "name": "TAI64N_SIZE",
        "initializer": "    12",
        "brief": "The size of a 64-bit timestamp plus a 32-bit nanosecond in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "ac675947f8d1b497100521a3fcbb20dec",
        "include": null,
        "has_details": false,
        "name": "TAI64NA_SIZE",
        "initializer": "    16",
        "brief": "The size of a 64-bit timestamp plus a 32-bit nanosecond plus a 32-bit attosecond in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a70eafdf190b8f3be16349543fe1b39ae",
        "include": null,
        "has_details": false,
        "name": "POINTER_SIZE",
        "initializer": "2",
        "brief": "The size of a pointer in bytes (when using Arduino system)",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      }
    ],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": true,
    "has_typedef_details": true,
    "has_func_details": false,
    "has_var_details": false,
    "has_define_details": true,
    "breadcrumb": [
      [
        "src",
        "dir_68267d1309a1af8e8297ef4c3efbcdba.html"
      ],
      [
        "SensorModbusMaster.h",
        "_sensor_modbus_master_8h.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "SensorModbusMaster.h",
        "_sensor_modbus_master_8h.html"
      ]
    ]
  }
}