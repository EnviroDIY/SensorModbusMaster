{
  "version": "1.14.0",
  "compound": {
    "kind": "file",
    "id": "_sensor_modbus_master_8h",
    "name": "SensorModbusMaster.h",
    "url_base": "_sensor_modbus_master_8h",
    "url": "_sensor_modbus_master_8h.html",
    "include": null,
    "has_template_details": false,
    "templates": null,
    "brief": "Contains the <a href=\"classmodbus_master.html\" class=\"m-doc\">modbusMaster</a> class declarations.",
    "description": "<aside class=\"m-note m-default\"><h4>Copyright</h4><p>Stroud Water Research Center Part of the EnviroDIY SensorModbusMaster library for Arduino.</p></aside><aside class=\"m-note m-default\"><h4>License</h4><p>This library is published under the BSD-3 license.</p></aside><aside class=\"m-note m-default\"><h4>Author</h4><p>Sara Geleskie Damiano <a href=\"mailto:sdamiano@stroudcenter.org\">sdamiano@stroudcenter.org</a></p></aside>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [
      {
        "kind": "union",
        "url": "unionle_frame.html",
        "name": "leFrame",
        "brief": "A frame for holding parts of a response. Define a little-endian frame as a union - that is a special class type that can hold only one of its non-static data members at a time.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "classmodbus_master.html",
        "name": "modbusMaster",
        "brief": "The class for communicating with modbus devices.",
        "deprecated": null,
        "since": null,
        "templates": null
      }
    ],
    "base_classes": [],
    "derived_classes": [],
    "enums": [
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a8ba83d09160bd55999b0630dccc467ae",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "endianness",
        "brief": "The &quot;endianness&quot; of returned values.",
        "description": "",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_strong": false,
        "values": [
          {
            "id": "a8ba83d09160bd55999b0630dccc467aead13338b1c7186aed834aa25dbb65b321",
            "name": "littleEndian",
            "initializer": "= 0",
            "brief": "little endian",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a8ba83d09160bd55999b0630dccc467aeafb28f96cadcbba103b51c2a667ad723b",
            "name": "bigEndian",
            "initializer": "",
            "brief": "big endian",
            "description": "",
            "deprecated": null,
            "since": null
          }
        ],
        "has_value_details": true
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a9b9360aa533153d15b6355695898bef1",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "pointerType",
        "brief": "The types of &quot;pointers&quot; to other modbus addresses.",
        "description": "<p>Sometimes values in registers are set as the address of a pointer to look at for the real value rather than being set as the values themselves. This pointer type tells you in what section of the memory map to look for the value being pointed to.</p>",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_strong": false,
        "values": [
          {
            "id": "a9b9360aa533153d15b6355695898bef1a333e9ee1d906125d6eefddc01f4576db",
            "name": "holdingRegister",
            "initializer": "= 0",
            "brief": "pointer to a holding register",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a9b9360aa533153d15b6355695898bef1a5004a4f94d3d85dc6d6f03adaf24c41b",
            "name": "inputRegister",
            "initializer": "",
            "brief": "pointer to an input register",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a9b9360aa533153d15b6355695898bef1ad0841ac9569d19e8423f438059e81bb4",
            "name": "inputContacts",
            "initializer": "",
            "brief": "pointer to a input contact",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a9b9360aa533153d15b6355695898bef1ab333cf93e88389149e1e8fb6c804d898",
            "name": "outputCoil",
            "initializer": "",
            "brief": "pointer to a output coil",
            "description": "",
            "deprecated": null,
            "since": null
          }
        ],
        "has_value_details": true
      }
    ],
    "typedefs": [
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "af8fb63466671ed6526c0cf8797962785",
        "include": null,
        "has_details": false,
        "is_using": false,
        "type": "enum <a href=\"#a8ba83d09160bd55999b0630dccc467ae\" class=\"m-doc\">endianness</a>",
        "args": "",
        "name": "endianness",
        "brief": "The &quot;endianness&quot; of returned values.",
        "description": "",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "afaa9b2da868a225ea0bd601361d9b4a6",
        "include": null,
        "has_details": true,
        "is_using": false,
        "type": "enum <a href=\"#a9b9360aa533153d15b6355695898bef1\" class=\"m-doc\">pointerType</a>",
        "args": "",
        "name": "pointerType",
        "brief": "The types of &quot;pointers&quot; to other modbus addresses.",
        "description": "<p>Sometimes values in registers are set as the address of a pointer to look at for the real value rather than being set as the values themselves. This pointer type tells you in what section of the memory map to look for the value being pointed to.</p>",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "abede485d42773c73a36db82ef12cb553",
        "include": null,
        "has_details": true,
        "is_using": false,
        "type": "union leFrame",
        "args": "",
        "name": "leFrame",
        "brief": "A frame for holding parts of a response. Define a little-endian frame as a union - that is a special class type that can hold only one of its non-static data members at a time.",
        "description": "<p>With avr-gcc (Arduino&#x27;s compiler), integer and floating point variables are all physically stored in memory in little-endian byte order, so this union is all that is needed to translate modbus byte data into the other data forms.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>: The byte order of big-endian data must be reversed when it is put in this frame format.</p></aside>",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "has_template_details": false,
        "templates": null
      }
    ],
    "funcs": [],
    "vars": [],
    "defines": [
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a3d9d93e9a53461ba2177521472b761c4",
        "include": null,
        "has_details": true,
        "name": "RESPONSE_BUFFER_SIZE",
        "initializer": "256",
        "brief": "The size of the response buffer for the modbus devices.",
        "description": "<p>This needs to be bigger than the largest response. Per the Specification and Implementation Guide for MODBUS over serial line, this value is 256 bytes. (This translates into a maximum of 125 registers to be read via Modbus/RTU and 123 by Modbus/TCP.)</p><p>If you know you will never make any modbus calls longer than this, decrease this number to save memory space.</p>",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a66f7c59a25c8cca6d5b0991895c26b69",
        "include": null,
        "has_details": false,
        "name": "MODBUS_TIMEOUT",
        "initializer": "500",
        "brief": "The default time to wait for response after a command (in ms)",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a4f4faaf6fc6fdad8c267e79a0472e929",
        "include": null,
        "has_details": true,
        "name": "MODBUS_FRAME_TIMEOUT",
        "initializer": "4",
        "brief": "The default time to wait between characters within a frame (in ms)",
        "description": "<p>The modbus protocol defines that there can be no more than 1.5 characters of silence between characters in a frame and any space over 3.5 characters defines a new frame.</p>",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a86fd4404b140711fdb77326609c0f393",
        "include": null,
        "has_details": false,
        "name": "BYTE_SIZE",
        "initializer": "1",
        "brief": "The size of a single byte in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a5581151d29ca9367f186a455e7918b24",
        "include": null,
        "has_details": false,
        "name": "UINT16_SIZE",
        "initializer": "2",
        "brief": "The size of an uint16_t in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a7dd6df41d89aa2e4887365611885c1f0",
        "include": null,
        "has_details": false,
        "name": "INT16_SIZE",
        "initializer": "2",
        "brief": "The size of an int16_t in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a587f427d930ffcd6e8117b992bdfc3dd",
        "include": null,
        "has_details": false,
        "name": "UINT32_SIZE",
        "initializer": "4",
        "brief": "The size of an uint32_t in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a6cb108c9a0b7aab4dd121fbf87c8d554",
        "include": null,
        "has_details": false,
        "name": "INT32_SIZE",
        "initializer": "4",
        "brief": "The size of an int32_t in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a18904678eccc87fab4cf262738d9d79e",
        "include": null,
        "has_details": false,
        "name": "FLOAT32_SIZE",
        "initializer": "4",
        "brief": "The size of a float32 in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "aefb8eddc7bc07a77de62fb120e296b4b",
        "include": null,
        "has_details": false,
        "name": "TAI64_SIZE",
        "initializer": "8",
        "brief": "The size of a 64-bit timestamp in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "adfe6a89eeb3b106a0d062ecbbcd4f2d0",
        "include": null,
        "has_details": false,
        "name": "TAI64N_SIZE",
        "initializer": "    12",
        "brief": "The size of a 64-bit timestamp plus a 32-bit nanosecond in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "ac675947f8d1b497100521a3fcbb20dec",
        "include": null,
        "has_details": false,
        "name": "TAI64NA_SIZE",
        "initializer": "    16",
        "brief": "The size of a 64-bit timestamp plus a 32-bit nanosecond plus a 32-bit attosecond in bytes.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_sensor_modbus_master_8h.html",
        "id": "a70eafdf190b8f3be16349543fe1b39ae",
        "include": null,
        "has_details": false,
        "name": "POINTER_SIZE",
        "initializer": "2",
        "brief": "The size of a pointer in bytes (when using Arduino system)",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      }
    ],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": true,
    "has_typedef_details": true,
    "has_func_details": false,
    "has_var_details": false,
    "has_define_details": true,
    "breadcrumb": [
      [
        "src",
        "dir_68267d1309a1af8e8297ef4c3efbcdba.html"
      ],
      [
        "SensorModbusMaster.h",
        "_sensor_modbus_master_8h.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "SensorModbusMaster.h",
        "_sensor_modbus_master_8h.html"
      ]
    ]
  }
}