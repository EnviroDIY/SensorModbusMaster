{
  "basedir": "/home/runner/work/SensorModbusMaster/SensorModbusMaster/code_docs/SensorModbusMaster/docs",
  "compounds": {
    "dir_16c76ff1f2a0767b55b09635847f4c4c": {
      "is_final": null,
      "parent": "dir_d28a4824dc47e487b107a5db32ef43c4",
      "parentGroup": null,
      "id": "dir_16c76ff1f2a0767b55b09635847f4c4c",
      "kind": "dir",
      "name": "examples/scanRegisters",
      "url": "dir_16c76ff1f2a0767b55b09635847f4c4c.html",
      "brief": "Contains the scanRegisters example.",
      "has_details": true,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "scanRegisters"
    },
    "example_get_set_address": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "example_get_set_address",
      "kind": "page",
      "name": "Getting and Setting a Modbus Address",
      "url": "example_get_set_address.html",
      "brief": "",
      "has_details": 5,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "Getting and Setting a Modbus Address"
    },
    "classmodbus_master": {
      "is_final": false,
      "parent": null,
      "parentGroup": null,
      "id": "classmodbus_master",
      "kind": "class",
      "name": "modbusMaster",
      "url": "classmodbus_master.html",
      "brief": "The class for communicating with modbus devices.",
      "has_details": true,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "templates": null,
      "leaf_name": "modbusMaster"
    },
    "directories_8dox": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "directories_8dox",
      "kind": "file",
      "name": "directories.dox",
      "url": "directories_8dox.html",
      "brief": "",
      "has_details": false,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "directories.dox"
    },
    "dir_d28a4824dc47e487b107a5db32ef43c4": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "dir_d28a4824dc47e487b107a5db32ef43c4",
      "kind": "dir",
      "name": "examples",
      "url": "dir_d28a4824dc47e487b107a5db32ef43c4.html",
      "brief": "Contains all of the example sketches.",
      "has_details": true,
      "children": [
        "dir_80072a2c8d5f879c1adb1ef96037e309",
        "dir_728e641d499dbb01b0d4039bc6b9f007",
        "dir_16c76ff1f2a0767b55b09635847f4c4c"
      ],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "examples"
    },
    "page_the_examples": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "page_the_examples",
      "kind": "page",
      "name": "Examples Using SensorModbusMaster",
      "url": "page_the_examples.html",
      "brief": "",
      "has_details": 7,
      "children": [
        "example_read_write_register",
        "example_scan_registers"
      ],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "Examples Using SensorModbusMaster"
    },
    "indexpage": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "indexpage",
      "kind": "page",
      "name": "SensorModbusMaster",
      "url": "index.html",
      "brief": "",
      "has_details": 11,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "SensorModbusMaster"
    },
    "_sensor_modbus_master_8h": {
      "is_final": null,
      "parent": "dir_68267d1309a1af8e8297ef4c3efbcdba",
      "parentGroup": null,
      "id": "_sensor_modbus_master_8h",
      "kind": "file",
      "name": "SensorModbusMaster.h",
      "url": "_sensor_modbus_master_8h.html",
      "brief": "Contains the <a href=\"classmodbus_master.html\" class=\"m-doc\">modbusMaster</a> class declarations.",
      "has_details": true,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "SensorModbusMaster.h"
    },
    "dir_68267d1309a1af8e8297ef4c3efbcdba": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "dir_68267d1309a1af8e8297ef4c3efbcdba",
      "kind": "dir",
      "name": "src",
      "url": "dir_68267d1309a1af8e8297ef4c3efbcdba.html",
      "brief": "Contains the source code for the SensorModbusMaster library.",
      "has_details": true,
      "children": [
        "_sensor_modbus_master_8cpp",
        "_sensor_modbus_master_8h"
      ],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "src"
    },
    "docs_2examples_8dox": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "docs_2examples_8dox",
      "kind": "file",
      "name": "examples.dox",
      "url": "docs_2examples_8dox.html",
      "brief": "",
      "has_details": false,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "examples.dox"
    },
    "examples_2examples_8dox": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "examples_2examples_8dox",
      "kind": "file",
      "name": "examples.dox",
      "url": "examples_2examples_8dox.html",
      "brief": "",
      "has_details": false,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "examples.dox"
    },
    "dir_f4316de2dfb04db90651672103de31d6": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "dir_f4316de2dfb04db90651672103de31d6",
      "kind": "dir",
      "name": "hardware",
      "url": "dir_f4316de2dfb04db90651672103de31d6.html",
      "brief": "Contains documentation on RS-485 hardware.",
      "has_details": true,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "hardware"
    },
    "_sensor_modbus_master_8cpp": {
      "is_final": null,
      "parent": "dir_68267d1309a1af8e8297ef4c3efbcdba",
      "parentGroup": null,
      "id": "_sensor_modbus_master_8cpp",
      "kind": "file",
      "name": "SensorModbusMaster.cpp",
      "url": "_sensor_modbus_master_8cpp.html",
      "brief": "Contains the <a href=\"classmodbus_master.html\" class=\"m-doc\">modbusMaster</a> class definitions.",
      "has_details": true,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "SensorModbusMaster.cpp"
    },
    "unionle_frame": {
      "is_final": false,
      "parent": null,
      "parentGroup": null,
      "id": "unionle_frame",
      "kind": "union",
      "name": "leFrame",
      "url": "unionle_frame.html",
      "brief": "A frame for holding parts of a response. Define a little-endian frame as a union - that is a special class type that can hold only one of its non-static data members at a time.",
      "has_details": true,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "templates": null,
      "leaf_name": "leFrame"
    },
    "change_log": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "change_log",
      "kind": "page",
      "name": "ChangeLog",
      "url": "change_log.html",
      "brief": "",
      "has_details": 33,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "ChangeLog"
    },
    "dir_49e56c817e5e54854c35e136979f97ca": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "dir_49e56c817e5e54854c35e136979f97ca",
      "kind": "dir",
      "name": "docs",
      "url": "dir_49e56c817e5e54854c35e136979f97ca.html",
      "brief": "Contains extra documentation and files to help build the documentation.",
      "has_details": true,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "docs"
    },
    "example_read_write_register": {
      "is_final": null,
      "parent": "page_the_examples",
      "parentGroup": null,
      "id": "example_read_write_register",
      "kind": "page",
      "name": "Reading and Writing Registers",
      "url": "example_read_write_register.html",
      "brief": "",
      "has_details": 5,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "Reading and Writing Registers"
    },
    "dir_80072a2c8d5f879c1adb1ef96037e309": {
      "is_final": null,
      "parent": "dir_d28a4824dc47e487b107a5db32ef43c4",
      "parentGroup": null,
      "id": "dir_80072a2c8d5f879c1adb1ef96037e309",
      "kind": "dir",
      "name": "examples/getSetAddress",
      "url": "dir_80072a2c8d5f879c1adb1ef96037e309.html",
      "brief": "Contains the getSetAddress example.",
      "has_details": true,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "getSetAddress"
    },
    "dir_728e641d499dbb01b0d4039bc6b9f007": {
      "is_final": null,
      "parent": "dir_d28a4824dc47e487b107a5db32ef43c4",
      "parentGroup": null,
      "id": "dir_728e641d499dbb01b0d4039bc6b9f007",
      "kind": "dir",
      "name": "examples/readWriteRegister",
      "url": "dir_728e641d499dbb01b0d4039bc6b9f007.html",
      "brief": "Contains the readWriteRegister example.",
      "has_details": true,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "readWriteRegister"
    },
    "keywords_8txt": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "keywords_8txt",
      "kind": "file",
      "name": "keywords.txt",
      "url": "keywords_8txt.html",
      "brief": "",
      "has_details": false,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "keywords.txt"
    },
    "page_hardware": {
      "is_final": null,
      "parent": null,
      "parentGroup": null,
      "id": "page_hardware",
      "kind": "page",
      "name": "Hardware for using ModbusRTU with RS-485 on Arduino",
      "url": "page_hardware.html",
      "brief": "",
      "has_details": 3,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "Hardware for using ModbusRTU with RS-485 on Arduino"
    },
    "example_scan_registers": {
      "is_final": null,
      "parent": "page_the_examples",
      "parentGroup": null,
      "id": "example_scan_registers",
      "kind": "page",
      "name": "Scanning Registers",
      "url": "example_scan_registers.html",
      "brief": "",
      "has_details": 5,
      "children": [],
      "childrenClasses": [],
      "childrenNamespaces": [],
      "childrenCompoundRefs": [],
      "deprecated": null,
      "since": null,
      "leaf_name": "Scanning Registers"
    }
  },
  "includes": {
    "directories.dox": "directories_8dox",
    "src/SensorModbusMaster.h": "_sensor_modbus_master_8h",
    "examples.dox": "examples_2examples_8dox",
    "src/SensorModbusMaster.cpp": "_sensor_modbus_master_8cpp",
    "keywords.txt": "keywords_8txt"
  },
  "search": [],
  "examples": [
    {
      "id": "scan_registers_8ino-example",
      "url": "scan_registers_8ino-example.html",
      "name": "scanRegisters.ino"
    },
    {
      "id": "read_write_register_8ino-example",
      "url": "read_write_register_8ino-example.html",
      "name": "readWriteRegister.ino"
    },
    {
      "id": "get_set_address_8ino-example",
      "url": "get_set_address_8ino-example.html",
      "name": "getSetAddress.ino"
    }
  ],
  "doxyfile": {
    "PROJECT_NAME": "SensorModbusMaster",
    "PROJECT_NUMBER": "1.6.4",
    "PROJECT_BRIEF": "An Arduino library for communicating via modbus with the Arduino acting as master.",
    "PROJECT_LOGO": "gp-desktop-logo.png",
    "OUTPUT_DIRECTORY": "../../SensorModbusMaster_Doxygen",
    "HTML_OUTPUT": "../SensorModbusMaster_Doxygen/m.css",
    "XML_OUTPUT": "xml",
    "USE_MATHJAX": true,
    "MATHJAX_VERSION": "MathJax_3",
    "MATHJAX_FORMAT": "SVG",
    "MATHJAX_RELPATH": "https://cdn.jsdelivr.net/npm/mathjax@3",
    "MATHJAX_EXTENSIONS": "ams",
    "MATHJAX_CODEFILE": "",
    "DOT_FONTNAME": "Source\nSans\nPro",
    "DOT_FONTSIZE": 16,
    "CREATE_SUBDIRS": false,
    "JAVADOC_AUTOBRIEF": false,
    "QT_AUTOBRIEF": false,
    "INTERNAL_DOCS": false,
    "SHOW_INCLUDE_FILES": true,
    "TAGFILES": [],
    "STRIP_FROM_PATH": [
      ".."
    ],
    "STRIP_FROM_INC_PATH": [],
    "PROJECT_REPOSITORY": "https://github.com/EnviroDIY/SensorModbusMaster"
  },
  "config": {
    "DOXYFILE": "mcss-Doxyfile",
    "THEME_COLOR": "#cb4b16",
    "FAVICON": [
      "enviroDIY_Favicon.png",
      "image/png"
    ],
    "LINKS_NAVBAR1": [
      [
        null,
        "About",
        "index.html",
        "index",
        [
          [
            "<a href=\"page_hardware.html\">Hardware</a>",
            null,
            null,
            null
          ],
          [
            "<a href=\"change_log.html\">ChangeLog</a>",
            null,
            null,
            null
          ]
        ]
      ],
      [
        "<a href=\"classmodbus_master.html\">The modbusMaster Class</a>",
        null,
        null,
        null,
        []
      ],
      [
        null,
        "Examples Using SensorModbusMaster",
        "page_the_examples.html",
        "page_the_examples",
        [
          [
            "<a href=\"example_read_write_register.html\">Reading and Writing</a>",
            null,
            null,
            null
          ],
          [
            "<a href=\"example_scan_registers.html\">Scanning Registers</a>",
            null,
            null,
            null
          ]
        ]
      ],
      [
        null,
        "Source Files",
        "files.html",
        "files",
        []
      ]
    ],
    "LINKS_NAVBAR2": [],
    "STYLESHEETS": [
      "css/m-EnviroDIY+documentation.compiled.css"
    ],
    "HTML_HEADER": null,
    "EXTRA_FILES": [
      "gp-desktop-logo.png",
      "gp-mobile-logo.png",
      "gp-scrolling-logo.png",
      "clipboard.js"
    ],
    "PAGE_HEADER": null,
    "FINE_PRINT": "[default]",
    "CLASS_INDEX_EXPAND_LEVELS": 2,
    "FILE_INDEX_EXPAND_LEVELS": 1,
    "CLASS_INDEX_EXPAND_INNER": false,
    "M_MATH_CACHE_FILE": "m.math.cache",
    "M_MATH_RENDER_AS_CODE": false,
    "M_CODE_FILTERS_PRE": {},
    "M_CODE_FILTERS_POST": {},
    "SEARCH_DISABLED": false,
    "SEARCH_DOWNLOAD_BINARY": false,
    "SEARCH_FILENAME_PREFIX": "searchdata",
    "SEARCH_RESULT_ID_BYTES": 2,
    "SEARCH_FILE_OFFSET_BYTES": 3,
    "SEARCH_NAME_SIZE_BYTES": 1,
    "SEARCH_HELP": "<p class=\"m-noindent\">Search for symbols, directories, files, pages or\ntopics. You can omit any prefix from the symbol or file path; adding a\n<code>:</code> or <code>/</code> suffix lists all members of given symbol or\ndirectory.</p>\n<p class=\"m-noindent\">Use <span class=\"m-label m-dim\">&darr;</span>\n/ <span class=\"m-label m-dim\">&uarr;</span> to navigate through the list,\n<span class=\"m-label m-dim\">Enter</span> to go.\n<span class=\"m-label m-dim\">Tab</span> autocompletes common prefix, you can\ncopy a link to the result using <span class=\"m-label m-dim\">\u2318</span>\n<span class=\"m-label m-dim\">L</span> while <span class=\"m-label m-dim\">\u2318</span>\n<span class=\"m-label m-dim\">M</span> produces a Markdown link.</p>\n",
    "SEARCH_BASE_URL": null,
    "SEARCH_EXTERNAL_URL": null,
    "SHOW_UNDOCUMENTED": false,
    "VERSION_LABELS": true,
    "DESKTOP_LOGO": "gp-desktop-logo.png",
    "MOBILE_LOGO": "gp-mobile-logo.png",
    "SCROLLING_LOGO": "gp-scrolling-logo.png"
  },
  "images": [],
  "current": "example_scan_registers.xml",
  "current_kind": null,
  "current_include": null,
  "current_prefix": [],
  "current_compound_url": null,
  "current_definition_url_base": null,
  "parsing_toplevel_desc": false
}