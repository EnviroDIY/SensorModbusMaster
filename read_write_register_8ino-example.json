{
  "version": "1.11.0",
  "compound": {
    "kind": "example",
    "id": "read_write_register_8ino-example",
    "name": "readWriteRegister.ino",
    "url_base": "read_write_register_8ino-example",
    "url": "read_write_register_8ino-example.html",
    "include": null,
    "has_template_details": false,
    "templates": null,
    "brief": "This example writes a setting value to a holding register, reads it to confirm the value has changed, and then reads several data values from holding registers.",
    "description": "<p>This example writes a setting value to a holding register, reads it to confirm the value has changed, and then reads several data values from holding registers.=========================================================================</p><aside class=\"m-note m-default\"><h4>Author</h4><p>Sara Geleskie Damiano <a href=\"mailto:sdamiano@stroudcenter.org\">sdamiano@stroudcenter.org</a></p></aside><aside class=\"m-note m-default\"><h4>Copyright</h4><p>Stroud Water Research Center</p></aside><aside class=\"m-note m-default\"><h4>License</h4><p>This example is published under the BSD-3 license.</p></aside><p>The register numbers in this example happen to be for an S::CAN oxy::lyser.</p><hr/><div class=\"m-code-arduino\"><div class=\"highlight\"><div class=\"line\"><a id=\"l-1\" name=\"l-1\"></a><span class=\"linenos\">  1</span><span class=\"cm\">/** =========================================================================</span>\n</div><div class=\"line\"><a id=\"l-2\" name=\"l-2\"></a><span class=\"linenos\">  2</span><span class=\"cm\"> * @example{lineno} readWriteRegister.ino</span>\n</div><div class=\"line\"><a id=\"l-3\" name=\"l-3\"></a><span class=\"linenos\">  3</span><span class=\"cm\"> * @author Sara Geleskie Damiano &lt;sdamiano@stroudcenter.org&gt;</span>\n</div><div class=\"line\"><a id=\"l-4\" name=\"l-4\"></a><span class=\"linenos\">  4</span><span class=\"cm\"> * @copyright Stroud Water Research Center</span>\n</div><div class=\"line\"><a id=\"l-5\" name=\"l-5\"></a><span class=\"linenos\">  5</span><span class=\"cm\"> * @license This example is published under the BSD-3 license.</span>\n</div><div class=\"line\"><a id=\"l-6\" name=\"l-6\"></a><span class=\"linenos\">  6</span><span class=\"cm\"> *</span>\n</div><div class=\"line\"><a id=\"l-7\" name=\"l-7\"></a><span class=\"linenos\">  7</span><span class=\"cm\"> * @brief This example writes a setting value to a holding register, reads it to confirm</span>\n</div><div class=\"line\"><a id=\"l-8\" name=\"l-8\"></a><span class=\"linenos\">  8</span><span class=\"cm\"> * the value has changed, and then reads several data values from holding registers.</span>\n</div><div class=\"line\"><a id=\"l-9\" name=\"l-9\"></a><span class=\"linenos\">  9</span><span class=\"cm\"> *</span>\n</div><div class=\"line\"><a id=\"l-10\" name=\"l-10\"></a><span class=\"linenos\"> 10</span><span class=\"cm\"> * The register numbers in this example happen to be for an S::CAN oxy::lyser.</span>\n</div><div class=\"line\"><a id=\"l-11\" name=\"l-11\"></a><span class=\"linenos\"> 11</span><span class=\"cm\"> *</span>\n</div><div class=\"line\"><a id=\"l-12\" name=\"l-12\"></a><span class=\"linenos\"> 12</span><span class=\"cm\"> * @m_examplenavigation{example_read_write_register,}</span>\n</div><div class=\"line\"><a id=\"l-13\" name=\"l-13\"></a><span class=\"linenos\"> 13</span><span class=\"cm\"> * @m_footernavigation</span>\n</div><div class=\"line\"><a id=\"l-14\" name=\"l-14\"></a><span class=\"linenos\"> 14</span><span class=\"cm\"> * ======================================================================= */</span>\n</div><div class=\"line\"><a id=\"l-15\" name=\"l-15\"></a><span class=\"linenos\"> 15</span>\n</div><div class=\"line\"><a id=\"l-16\" name=\"l-16\"></a><span class=\"linenos\"> 16</span><span class=\"c1\">// ---------------------------------------------------------------------------</span>\n</div><div class=\"line\"><a id=\"l-17\" name=\"l-17\"></a><span class=\"linenos\"> 17</span><span class=\"c1\">// Include the base required libraries</span>\n</div><div class=\"line\"><a id=\"l-18\" name=\"l-18\"></a><span class=\"linenos\"> 18</span><span class=\"c1\">// ---------------------------------------------------------------------------</span>\n</div><div class=\"line\"><a id=\"l-19\" name=\"l-19\"></a><span class=\"linenos\"> 19</span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;Arduino.h&gt;</span>\n</div><div class=\"line\"><a id=\"l-20\" name=\"l-20\"></a><span class=\"linenos\"> 20</span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;SensorModbusMaster.h&gt;</span>\n</div><div class=\"line\"><a id=\"l-21\" name=\"l-21\"></a><span class=\"linenos\"> 21</span>\n</div><div class=\"line\"><a id=\"l-22\" name=\"l-22\"></a><span class=\"linenos\"> 22</span><span class=\"c1\">// ---------------------------------------------------------------------------</span>\n</div><div class=\"line\"><a id=\"l-23\" name=\"l-23\"></a><span class=\"linenos\"> 23</span><span class=\"c1\">// Set up the sensor specific information</span>\n</div><div class=\"line\"><a id=\"l-24\" name=\"l-24\"></a><span class=\"linenos\"> 24</span><span class=\"c1\">//   ie, pin locations, addresses, calibrations and related settings</span>\n</div><div class=\"line\"><a id=\"l-25\" name=\"l-25\"></a><span class=\"linenos\"> 25</span><span class=\"c1\">// ---------------------------------------------------------------------------</span>\n</div><div class=\"line\"><a id=\"l-26\" name=\"l-26\"></a><span class=\"linenos\"> 26</span>\n</div><div class=\"line\"><a id=\"l-27\" name=\"l-27\"></a><span class=\"linenos\"> 27</span><span class=\"c1\">// Define the sensor&#39;s modbus address</span>\n</div><div class=\"line\"><a id=\"l-28\" name=\"l-28\"></a><span class=\"linenos\"> 28</span><span class=\"kr\">byte</span><span class=\"w\"> </span><span class=\"n\">modbusAddress</span><span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x01</span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"c1\">// The sensor&#39;s modbus address, or SlaveID</span>\n</div><div class=\"line\"><a id=\"l-29\" name=\"l-29\"></a><span class=\"linenos\"> 29</span><span class=\"kr\">long</span><span class=\"w\"> </span><span class=\"n\">modbusBaudRate</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">38400</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// The baud rate the sensor uses</span>\n</div><div class=\"line\"><a id=\"l-30\" name=\"l-30\"></a><span class=\"linenos\"> 30</span>\n</div><div class=\"line\"><a id=\"l-31\" name=\"l-31\"></a><span class=\"linenos\"> 31</span><span class=\"c1\">// Define pin number variables</span>\n</div><div class=\"line\"><a id=\"l-32\" name=\"l-32\"></a><span class=\"linenos\"> 32</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int</span><span class=\"w\"> </span><span class=\"n\">sensorPwrPin</span><span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// The pin sending power to the sensor</span>\n</div><div class=\"line\"><a id=\"l-33\" name=\"l-33\"></a><span class=\"linenos\"> 33</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int</span><span class=\"w\"> </span><span class=\"n\">adapterPwrPin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// The pin sending power to the RS485 adapter</span>\n</div><div class=\"line\"><a id=\"l-34\" name=\"l-34\"></a><span class=\"linenos\"> 34</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int</span><span class=\"w\"> </span><span class=\"n\">DEREPin</span><span class=\"w\">       </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"c1\">// The pin controlling Receive Enable and Driver Enable</span>\n</div><div class=\"line\"><a id=\"l-35\" name=\"l-35\"></a><span class=\"linenos\"> 35</span><span class=\"w\">                               </span><span class=\"c1\">// on the RS485 adapter, if applicable (else, -1)</span>\n</div><div class=\"line\"><a id=\"l-36\" name=\"l-36\"></a><span class=\"linenos\"> 36</span><span class=\"w\">                               </span><span class=\"c1\">// Setting HIGH enables the driver (arduino) to send text</span>\n</div><div class=\"line\"><a id=\"l-37\" name=\"l-37\"></a><span class=\"linenos\"> 37</span><span class=\"w\">                               </span><span class=\"c1\">// Setting LOW enables the receiver (sensor) to send text</span>\n</div><div class=\"line\"><a id=\"l-38\" name=\"l-38\"></a><span class=\"linenos\"> 38</span>\n</div><div class=\"line\"><a id=\"l-39\" name=\"l-39\"></a><span class=\"linenos\"> 39</span><span class=\"c1\">// Construct software serial object for Modbus</span>\n</div><div class=\"line\"><a id=\"l-40\" name=\"l-40\"></a><span class=\"linenos\"> 40</span><span class=\"cp\">#if defined(ARDUINO_AVR_UNO)</span>\n</div><div class=\"line\"><a id=\"l-41\" name=\"l-41\"></a><span class=\"linenos\"> 41</span><span class=\"c1\">// The Uno only has 1 hardware serial port, which is dedicated to comunication with the</span>\n</div><div class=\"line\"><a id=\"l-42\" name=\"l-42\"></a><span class=\"linenos\"> 42</span><span class=\"c1\">// computer If using an Uno, you will be restricted to using AltSofSerial or</span>\n</div><div class=\"line\"><a id=\"l-43\" name=\"l-43\"></a><span class=\"linenos\"> 43</span><span class=\"c1\">// SoftwareSerial</span>\n</div><div class=\"line\"><a id=\"l-44\" name=\"l-44\"></a><span class=\"linenos\"> 44</span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;SoftwareSerial.h&gt;</span>\n</div><div class=\"line\"><a id=\"l-45\" name=\"l-45\"></a><span class=\"linenos\"> 45</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int</span><span class=\"w\">      </span><span class=\"n\">SSRxPin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// Receive pin for software serial (Rx on RS485 adapter)</span>\n</div><div class=\"line\"><a id=\"l-46\" name=\"l-46\"></a><span class=\"linenos\"> 46</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int</span><span class=\"w\">      </span><span class=\"n\">SSTxPin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// Send pin for software serial (Tx on RS485 adapter)</span>\n</div><div class=\"line\"><a id=\"l-47\" name=\"l-47\"></a><span class=\"linenos\"> 47</span><span class=\"nf\">SoftwareSerial</span><span class=\"w\"> </span><span class=\"nf\">modbusSerial</span><span class=\"p\">(</span><span class=\"n\">SSRxPin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SSTxPin</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-48\" name=\"l-48\"></a><span class=\"linenos\"> 48</span><span class=\"cp\">#else</span>\n</div><div class=\"line\"><a id=\"l-49\" name=\"l-49\"></a><span class=\"linenos\"> 49</span><span class=\"c1\">// This is just a assigning another name to the same port, for convienence</span>\n</div><div class=\"line\"><a id=\"l-50\" name=\"l-50\"></a><span class=\"linenos\"> 50</span><span class=\"c1\">// Unless it is unavailable, always prefer hardware serial.</span>\n</div><div class=\"line\"><a id=\"l-51\" name=\"l-51\"></a><span class=\"linenos\"> 51</span><span class=\"n\">HardwareSerial</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">modbusSerial</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">Serial1</span><span class=\"p\">;</span>\n</div><div class=\"line\"><a id=\"l-52\" name=\"l-52\"></a><span class=\"linenos\"> 52</span><span class=\"cp\">#endif</span>\n</div><div class=\"line\"><a id=\"l-53\" name=\"l-53\"></a><span class=\"linenos\"> 53</span>\n</div><div class=\"line\"><a id=\"l-54\" name=\"l-54\"></a><span class=\"linenos\"> 54</span><span class=\"c1\">// Construct the modbus instance</span>\n</div><div class=\"line\"><a id=\"l-55\" name=\"l-55\"></a><span class=\"linenos\"> 55</span><span class=\"n\">modbusMaster</span><span class=\"w\"> </span><span class=\"n\">modbus</span><span class=\"p\">;</span>\n</div><div class=\"line\"><a id=\"l-56\" name=\"l-56\"></a><span class=\"linenos\"> 56</span>\n</div><div class=\"line\"><a id=\"l-57\" name=\"l-57\"></a><span class=\"linenos\"> 57</span><span class=\"c1\">// ---------------------------------------------------------------------------</span>\n</div><div class=\"line\"><a id=\"l-58\" name=\"l-58\"></a><span class=\"linenos\"> 58</span><span class=\"c1\">// Main setup function</span>\n</div><div class=\"line\"><a id=\"l-59\" name=\"l-59\"></a><span class=\"linenos\"> 59</span><span class=\"c1\">// ---------------------------------------------------------------------------</span>\n</div><div class=\"line\"><a id=\"l-60\" name=\"l-60\"></a><span class=\"linenos\"> 60</span><span class=\"kr\">void</span><span class=\"w\"> </span><span class=\"nb\">setup</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n</div><div class=\"line\"><a id=\"l-61\" name=\"l-61\"></a><span class=\"linenos\"> 61</span><span class=\"w\">    </span><span class=\"c1\">// Set various pins as needed</span>\n</div><div class=\"line\"><a id=\"l-62\" name=\"l-62\"></a><span class=\"linenos\"> 62</span><span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">DEREPin</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nf\">pinMode</span><span class=\"p\">(</span><span class=\"n\">DEREPin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">OUTPUT</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</div><div class=\"line\"><a id=\"l-63\" name=\"l-63\"></a><span class=\"linenos\"> 63</span><span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">sensorPwrPin</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n</div><div class=\"line\"><a id=\"l-64\" name=\"l-64\"></a><span class=\"linenos\"> 64</span><span class=\"w\">        </span><span class=\"nf\">pinMode</span><span class=\"p\">(</span><span class=\"n\">sensorPwrPin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">OUTPUT</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-65\" name=\"l-65\"></a><span class=\"linenos\"> 65</span><span class=\"w\">        </span><span class=\"nf\">digitalWrite</span><span class=\"p\">(</span><span class=\"n\">sensorPwrPin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">HIGH</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-66\" name=\"l-66\"></a><span class=\"linenos\"> 66</span><span class=\"w\">    </span><span class=\"p\">}</span>\n</div><div class=\"line\"><a id=\"l-67\" name=\"l-67\"></a><span class=\"linenos\"> 67</span><span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">adapterPwrPin</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n</div><div class=\"line\"><a id=\"l-68\" name=\"l-68\"></a><span class=\"linenos\"> 68</span><span class=\"w\">        </span><span class=\"nf\">pinMode</span><span class=\"p\">(</span><span class=\"n\">adapterPwrPin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">OUTPUT</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-69\" name=\"l-69\"></a><span class=\"linenos\"> 69</span><span class=\"w\">        </span><span class=\"nf\">digitalWrite</span><span class=\"p\">(</span><span class=\"n\">adapterPwrPin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">HIGH</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-70\" name=\"l-70\"></a><span class=\"linenos\"> 70</span><span class=\"w\">    </span><span class=\"p\">}</span>\n</div><div class=\"line\"><a id=\"l-71\" name=\"l-71\"></a><span class=\"linenos\"> 71</span>\n</div><div class=\"line\"><a id=\"l-72\" name=\"l-72\"></a><span class=\"linenos\"> 72</span><span class=\"w\">    </span><span class=\"c1\">// Turn on the &quot;main&quot; serial port for debugging via USB Serial Monitor</span>\n</div><div class=\"line\"><a id=\"l-73\" name=\"l-73\"></a><span class=\"linenos\"> 73</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">begin</span><span class=\"p\">(</span><span class=\"mi\">57600</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-74\" name=\"l-74\"></a><span class=\"linenos\"> 74</span>\n</div><div class=\"line\"><a id=\"l-75\" name=\"l-75\"></a><span class=\"linenos\"> 75</span><span class=\"w\">    </span><span class=\"c1\">// Turn on your modbus serial port</span>\n</div><div class=\"line\"><a id=\"l-76\" name=\"l-76\"></a><span class=\"linenos\"> 76</span><span class=\"cp\">#if defined(ARDUINO_AVR_UNO)</span>\n</div><div class=\"line\"><a id=\"l-77\" name=\"l-77\"></a><span class=\"linenos\"> 77</span><span class=\"w\">    </span><span class=\"n\">modbusSerial</span><span class=\"p\">.</span><span class=\"nf\">begin</span><span class=\"p\">(</span><span class=\"n\">modbusBaudRate</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-78\" name=\"l-78\"></a><span class=\"linenos\"> 78</span><span class=\"w\">    </span><span class=\"c1\">// NOTE:  Software serial only supports 8N1</span>\n</div><div class=\"line\"><a id=\"l-79\" name=\"l-79\"></a><span class=\"linenos\"> 79</span><span class=\"cp\">#else</span>\n</div><div class=\"line\"><a id=\"l-80\" name=\"l-80\"></a><span class=\"linenos\"> 80</span><span class=\"w\">    </span><span class=\"n\">Serial1</span><span class=\"p\">.</span><span class=\"nf\">begin</span><span class=\"p\">(</span><span class=\"n\">modbusBaudRate</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SERIAL_8O1</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-81\" name=\"l-81\"></a><span class=\"linenos\"> 81</span><span class=\"w\">    </span><span class=\"c1\">// ^^ use this for 8 data bits - odd parity - 1 stop bit</span>\n</div><div class=\"line\"><a id=\"l-82\" name=\"l-82\"></a><span class=\"linenos\"> 82</span><span class=\"w\">    </span><span class=\"c1\">// Serial1.begin(modbusBaudRate, SERIAL_8E1);</span>\n</div><div class=\"line\"><a id=\"l-83\" name=\"l-83\"></a><span class=\"linenos\"> 83</span><span class=\"w\">    </span><span class=\"c1\">// ^^ use this for 8 data bits - even parity - 1 stop bit</span>\n</div><div class=\"line\"><a id=\"l-84\" name=\"l-84\"></a><span class=\"linenos\"> 84</span><span class=\"w\">    </span><span class=\"c1\">// Serial1.begin(modbusBaudRate, SERIAL_8N2);</span>\n</div><div class=\"line\"><a id=\"l-85\" name=\"l-85\"></a><span class=\"linenos\"> 85</span><span class=\"w\">    </span><span class=\"c1\">// ^^ use this for 8 data bits - no parity - 2 stop bits</span>\n</div><div class=\"line\"><a id=\"l-86\" name=\"l-86\"></a><span class=\"linenos\"> 86</span><span class=\"w\">    </span><span class=\"c1\">// Serial1.begin(modbusBaudRate);</span>\n</div><div class=\"line\"><a id=\"l-87\" name=\"l-87\"></a><span class=\"linenos\"> 87</span><span class=\"w\">    </span><span class=\"c1\">// ^^ use this for 8 data bits - no parity - 1 stop bits</span>\n</div><div class=\"line\"><a id=\"l-88\" name=\"l-88\"></a><span class=\"linenos\"> 88</span><span class=\"w\">    </span><span class=\"c1\">// Despite being technically &quot;non-compliant&quot; with the modbus specifications</span>\n</div><div class=\"line\"><a id=\"l-89\" name=\"l-89\"></a><span class=\"linenos\"> 89</span><span class=\"w\">    </span><span class=\"c1\">// 8N1 parity is very common.</span>\n</div><div class=\"line\"><a id=\"l-90\" name=\"l-90\"></a><span class=\"linenos\"> 90</span><span class=\"cp\">#endif</span>\n</div><div class=\"line\"><a id=\"l-91\" name=\"l-91\"></a><span class=\"linenos\"> 91</span>\n</div><div class=\"line\"><a id=\"l-92\" name=\"l-92\"></a><span class=\"linenos\"> 92</span><span class=\"w\">    </span><span class=\"c1\">// Turn on debugging, if desired</span>\n</div><div class=\"line\"><a id=\"l-93\" name=\"l-93\"></a><span class=\"linenos\"> 93</span><span class=\"w\">    </span><span class=\"c1\">// modbus.setDebugStream(&amp;Serial);</span>\n</div><div class=\"line\"><a id=\"l-94\" name=\"l-94\"></a><span class=\"linenos\"> 94</span>\n</div><div class=\"line\"><a id=\"l-95\" name=\"l-95\"></a><span class=\"linenos\"> 95</span><span class=\"w\">    </span><span class=\"c1\">// Start the modbus instance</span>\n</div><div class=\"line\"><a id=\"l-96\" name=\"l-96\"></a><span class=\"linenos\"> 96</span><span class=\"w\">    </span><span class=\"n\">modbus</span><span class=\"p\">.</span><span class=\"nf\">begin</span><span class=\"p\">(</span><span class=\"n\">modbusAddress</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">modbusSerial</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DEREPin</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-97\" name=\"l-97\"></a><span class=\"linenos\"> 97</span>\n</div><div class=\"line\"><a id=\"l-98\" name=\"l-98\"></a><span class=\"linenos\"> 98</span><span class=\"w\">    </span><span class=\"c1\">// Write to a holding register</span>\n</div><div class=\"line\"><a id=\"l-99\" name=\"l-99\"></a><span class=\"linenos\"> 99</span><span class=\"w\">    </span><span class=\"c1\">// In this case, we are changing the output units of a dissolved oxygen sensor</span>\n</div><div class=\"line\"><a id=\"l-100\" name=\"l-100\"></a><span class=\"linenos\">100</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;Setting DO units to ppm&quot;</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-101\" name=\"l-101\"></a><span class=\"linenos\">101</span><span class=\"w\">    </span><span class=\"n\">modbus</span><span class=\"p\">.</span><span class=\"n\">int16ToRegister</span><span class=\"p\">(</span><span class=\"mh\">0x01</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bigEndian</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-102\" name=\"l-102\"></a><span class=\"linenos\">102</span><span class=\"w\">    </span><span class=\"c1\">// Verify that the register changed</span>\n</div><div class=\"line\"><a id=\"l-103\" name=\"l-103\"></a><span class=\"linenos\">103</span><span class=\"w\">    </span><span class=\"c1\">// 0x03 = holding register</span>\n</div><div class=\"line\"><a id=\"l-104\" name=\"l-104\"></a><span class=\"linenos\">104</span><span class=\"w\">    </span><span class=\"c1\">// only holding registers are writeable</span>\n</div><div class=\"line\"><a id=\"l-105\" name=\"l-105\"></a><span class=\"linenos\">105</span><span class=\"w\">    </span><span class=\"kr\">int16_t</span><span class=\"w\"> </span><span class=\"n\">doUnitMode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">modbus</span><span class=\"p\">.</span><span class=\"n\">int16FromRegister</span><span class=\"p\">(</span><span class=\"mh\">0x03</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x01</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bigEndian</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-106\" name=\"l-106\"></a><span class=\"linenos\">106</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;Current unit mode is &quot;</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-107\" name=\"l-107\"></a><span class=\"linenos\">107</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"n\">doUnitMode</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-108\" name=\"l-108\"></a><span class=\"linenos\">108</span><span class=\"p\">}</span>\n</div><div class=\"line\"><a id=\"l-109\" name=\"l-109\"></a><span class=\"linenos\">109</span>\n</div><div class=\"line\"><a id=\"l-110\" name=\"l-110\"></a><span class=\"linenos\">110</span><span class=\"c1\">// ---------------------------------------------------------------------------</span>\n</div><div class=\"line\"><a id=\"l-111\" name=\"l-111\"></a><span class=\"linenos\">111</span><span class=\"c1\">// Main setup function</span>\n</div><div class=\"line\"><a id=\"l-112\" name=\"l-112\"></a><span class=\"linenos\">112</span><span class=\"c1\">// ---------------------------------------------------------------------------</span>\n</div><div class=\"line\"><a id=\"l-113\" name=\"l-113\"></a><span class=\"linenos\">113</span><span class=\"kr\">void</span><span class=\"w\"> </span><span class=\"nb\">loop</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n</div><div class=\"line\"><a id=\"l-114\" name=\"l-114\"></a><span class=\"linenos\">114</span><span class=\"w\">    </span><span class=\"c1\">// Get data values from read-only input registers (0x04)</span>\n</div><div class=\"line\"><a id=\"l-115\" name=\"l-115\"></a><span class=\"linenos\">115</span><span class=\"w\">    </span><span class=\"c1\">// Just for show, we will do the exact same thing 2 ways</span>\n</div><div class=\"line\"><a id=\"l-116\" name=\"l-116\"></a><span class=\"linenos\">116</span><span class=\"w\">    </span><span class=\"c1\">// All values will be read as bigEndian</span>\n</div><div class=\"line\"><a id=\"l-117\" name=\"l-117\"></a><span class=\"linenos\">117</span>\n</div><div class=\"line\"><a id=\"l-118\" name=\"l-118\"></a><span class=\"linenos\">118</span><span class=\"w\">    </span><span class=\"c1\">// Some variables to hold results</span>\n</div><div class=\"line\"><a id=\"l-119\" name=\"l-119\"></a><span class=\"linenos\">119</span><span class=\"w\">    </span><span class=\"kr\">uint16_t</span><span class=\"w\"> </span><span class=\"n\">deviceStatus</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n</div><div class=\"line\"><a id=\"l-120\" name=\"l-120\"></a><span class=\"linenos\">120</span><span class=\"w\">    </span><span class=\"kr\">int16_t</span><span class=\"w\">  </span><span class=\"n\">doPPM</span><span class=\"w\">        </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n</div><div class=\"line\"><a id=\"l-121\" name=\"l-121\"></a><span class=\"linenos\">121</span><span class=\"w\">    </span><span class=\"kr\">uint16_t</span><span class=\"w\"> </span><span class=\"n\">temperature</span><span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n</div><div class=\"line\"><a id=\"l-122\" name=\"l-122\"></a><span class=\"linenos\">122</span>\n</div><div class=\"line\"><a id=\"l-123\" name=\"l-123\"></a><span class=\"linenos\">123</span><span class=\"w\">    </span><span class=\"c1\">// Method 1:</span>\n</div><div class=\"line\"><a id=\"l-124\" name=\"l-124\"></a><span class=\"linenos\">124</span><span class=\"w\">    </span><span class=\"c1\">// Get three values one at a time from 3 different registers.</span>\n</div><div class=\"line\"><a id=\"l-125\" name=\"l-125\"></a><span class=\"linenos\">125</span><span class=\"w\">    </span><span class=\"c1\">// This code is easier to follow, but it requires more back-and-forth between</span>\n</div><div class=\"line\"><a id=\"l-126\" name=\"l-126\"></a><span class=\"linenos\">126</span><span class=\"w\">    </span><span class=\"c1\">// the Arduino and the sensor so it is a little &quot;slower&quot;.</span>\n</div><div class=\"line\"><a id=\"l-127\" name=\"l-127\"></a><span class=\"linenos\">127</span><span class=\"w\">    </span><span class=\"n\">deviceStatus</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">modbus</span><span class=\"p\">.</span><span class=\"n\">uint16FromRegister</span><span class=\"p\">(</span><span class=\"mh\">0x04</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bigEndian</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-128\" name=\"l-128\"></a><span class=\"linenos\">128</span><span class=\"w\">    </span><span class=\"n\">doPPM</span><span class=\"w\">        </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">modbus</span><span class=\"p\">.</span><span class=\"n\">int16FromRegister</span><span class=\"p\">(</span><span class=\"mh\">0x04</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x01</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bigEndian</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-129\" name=\"l-129\"></a><span class=\"linenos\">129</span><span class=\"w\">    </span><span class=\"n\">temperature</span><span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">modbus</span><span class=\"p\">.</span><span class=\"n\">uint16FromRegister</span><span class=\"p\">(</span><span class=\"mh\">0x04</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x02</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bigEndian</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-130\" name=\"l-130\"></a><span class=\"linenos\">130</span>\n</div><div class=\"line\"><a id=\"l-131\" name=\"l-131\"></a><span class=\"linenos\">131</span><span class=\"w\">    </span><span class=\"c1\">// Print results</span>\n</div><div class=\"line\"><a id=\"l-132\" name=\"l-132\"></a><span class=\"linenos\">132</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;Device Status:&quot;</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-133\" name=\"l-133\"></a><span class=\"linenos\">133</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"n\">deviceStatus</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-134\" name=\"l-134\"></a><span class=\"linenos\">134</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;Dissolved Oxygen in ppm:&quot;</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-135\" name=\"l-135\"></a><span class=\"linenos\">135</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"n\">doPPM</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-136\" name=\"l-136\"></a><span class=\"linenos\">136</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;Temperature in \u00b0C:&quot;</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-137\" name=\"l-137\"></a><span class=\"linenos\">137</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"n\">temperature</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-138\" name=\"l-138\"></a><span class=\"linenos\">138</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">();</span>\n</div><div class=\"line\"><a id=\"l-139\" name=\"l-139\"></a><span class=\"linenos\">139</span>\n</div><div class=\"line\"><a id=\"l-140\" name=\"l-140\"></a><span class=\"linenos\">140</span><span class=\"w\">    </span><span class=\"c1\">// Method 2:</span>\n</div><div class=\"line\"><a id=\"l-141\" name=\"l-141\"></a><span class=\"linenos\">141</span><span class=\"w\">    </span><span class=\"c1\">// Read all three registers at once and parse the values from the response.</span>\n</div><div class=\"line\"><a id=\"l-142\" name=\"l-142\"></a><span class=\"linenos\">142</span><span class=\"w\">    </span><span class=\"c1\">// This is faster, especially when getting many readings, but it&#39;s trickier to</span>\n</div><div class=\"line\"><a id=\"l-143\" name=\"l-143\"></a><span class=\"linenos\">143</span><span class=\"w\">    </span><span class=\"c1\">// write and understand the code.</span>\n</div><div class=\"line\"><a id=\"l-144\" name=\"l-144\"></a><span class=\"linenos\">144</span><span class=\"w\">    </span><span class=\"kr\">bool</span><span class=\"w\"> </span><span class=\"n\">success</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">modbus</span><span class=\"p\">.</span><span class=\"n\">getRegisters</span><span class=\"p\">(</span><span class=\"mh\">0x04</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-145\" name=\"l-145\"></a><span class=\"linenos\">145</span><span class=\"w\">    </span><span class=\"c1\">// ^ This gets the values and stores them in an internal &quot;frame&quot; with the hex values</span>\n</div><div class=\"line\"><a id=\"l-146\" name=\"l-146\"></a><span class=\"linenos\">146</span><span class=\"w\">    </span><span class=\"c1\">// of the response</span>\n</div><div class=\"line\"><a id=\"l-147\" name=\"l-147\"></a><span class=\"linenos\">147</span><span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">success</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n</div><div class=\"line\"><a id=\"l-148\" name=\"l-148\"></a><span class=\"linenos\">148</span><span class=\"w\">        </span><span class=\"n\">deviceStatus</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">modbus</span><span class=\"p\">.</span><span class=\"n\">uint16FromFrame</span><span class=\"p\">(</span><span class=\"n\">bigEndian</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-149\" name=\"l-149\"></a><span class=\"linenos\">149</span><span class=\"w\">        </span><span class=\"c1\">// ^ The first data value is at position 3 in the modbus response frame</span>\n</div><div class=\"line\"><a id=\"l-150\" name=\"l-150\"></a><span class=\"linenos\">150</span><span class=\"w\">        </span><span class=\"c1\">// 0 = modbus address, 1 = modbus method, 2 = # registers returned, 3 = 1st</span>\n</div><div class=\"line\"><a id=\"l-151\" name=\"l-151\"></a><span class=\"linenos\">151</span><span class=\"w\">        </span><span class=\"c1\">// value returned</span>\n</div><div class=\"line\"><a id=\"l-152\" name=\"l-152\"></a><span class=\"linenos\">152</span><span class=\"w\">        </span><span class=\"n\">doPPM</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">modbus</span><span class=\"p\">.</span><span class=\"n\">int16FromFrame</span><span class=\"p\">(</span><span class=\"n\">bigEndian</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-153\" name=\"l-153\"></a><span class=\"linenos\">153</span><span class=\"w\">        </span><span class=\"c1\">// ^ The next data value is at position 5 since each register occupies 2 places</span>\n</div><div class=\"line\"><a id=\"l-154\" name=\"l-154\"></a><span class=\"linenos\">154</span><span class=\"w\">        </span><span class=\"n\">temperature</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">modbus</span><span class=\"p\">.</span><span class=\"n\">uint16FromFrame</span><span class=\"p\">(</span><span class=\"n\">bigEndian</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-155\" name=\"l-155\"></a><span class=\"linenos\">155</span><span class=\"w\">    </span><span class=\"p\">}</span>\n</div><div class=\"line\"><a id=\"l-156\" name=\"l-156\"></a><span class=\"linenos\">156</span>\n</div><div class=\"line\"><a id=\"l-157\" name=\"l-157\"></a><span class=\"linenos\">157</span><span class=\"w\">    </span><span class=\"c1\">// Print results</span>\n</div><div class=\"line\"><a id=\"l-158\" name=\"l-158\"></a><span class=\"linenos\">158</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;Device Status:&quot;</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-159\" name=\"l-159\"></a><span class=\"linenos\">159</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"n\">deviceStatus</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-160\" name=\"l-160\"></a><span class=\"linenos\">160</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;Dissolved Oxygen in ppm:&quot;</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-161\" name=\"l-161\"></a><span class=\"linenos\">161</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"n\">doPPM</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-162\" name=\"l-162\"></a><span class=\"linenos\">162</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;Temperature in \u00b0C:&quot;</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-163\" name=\"l-163\"></a><span class=\"linenos\">163</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"n\">temperature</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-164\" name=\"l-164\"></a><span class=\"linenos\">164</span><span class=\"w\">    </span><span class=\"nf\">Serial</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">();</span>\n</div><div class=\"line\"><a id=\"l-165\" name=\"l-165\"></a><span class=\"linenos\">165</span><span class=\"p\">}</span>\n</div></div></div>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": [
      null,
      [
        "example_read_write_register.html",
        "Reading and Writing Registers"
      ],
      [
        "scan_registers_8ino-example.html",
        "scanRegisters.ino"
      ]
    ],
    "modules": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": false,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "Examples Using SensorModbusMaster",
        "page_the_examples.html"
      ],
      [
        "Reading and Writing Registers",
        "example_read_write_register.html"
      ],
      [
        "readWriteRegister.ino",
        "read_write_register_8ino-example.html"
      ]
    ]
  }
}